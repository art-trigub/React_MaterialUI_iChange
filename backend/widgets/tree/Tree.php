<?php

namespace backend\widgets\tree;

use common\models\Language;
use yii\base\Widget;
use yii\helpers\ArrayHelper;
use yii\helpers\Json;

class Tree extends Widget
{
    public $childsProperty = 'childs';

    public $options = [];

    public $listOptions = ['class' => 'tree-list'];

    public $clientOptions = [];

    public $sortClientOptions = [];

    public $sortable = true;

    public $models = [];

    public $languages = [];

    public $label;

    public $rootOptions = [];

    public $childOptions = [];


    function run()
    {
        parent::run(); // TODO: Change the autogenerated stub

        if (!isset($this->options['id'])) {
            $this->options['id'] = $this->getId();
        }

        $this->languages = Language::getList();


        $this->registerAssets();

        return $this->renderItems($this->models, true);
    }

    public function renderItems($models, $root = false)
    {
        return $this->render('_items', [
            'models' => $models,
            'listOptions' => $this->listOptions,
            'languages' => $this->languages,
            'root' => $root
        ]);
    }

    public function registerAssets()
    {
        $clientOptions = Json::htmlEncode($this->clientOptions);
        $listOptions = $this->listOptions;
        $id = $this->options['id'];

        $js = "jQuery('#$id').tree($clientOptions);";

        $view = $this->getView();
        TreeAsset::register($view);
        $view->registerJs($js);

        if($this->sortable) {
            $options = Json::htmlEncode($this->sortClientOptions);

            $class = ArrayHelper::remove($listOptions, 'class', 'tree-list');
            $js = "jQuery('.{$class}').sortable($options);";

            \yii\jui\JuiAsset::register($view);
            $view->registerJs($js);
        }
    }
}